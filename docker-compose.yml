#
# replace 'sr' with your initials
#
#
# docker-compose -p sr up -d
# export WEBANNO_HOME=${PWD} && export WEBANNO_PORT=10001 && docker-compose -f <(curl 'https://raw.githubusercontent.com/remstef/webanno-exmaralda/master/docker-compose.yml') -p sr up -d
#
# docker-compose -p sr down
# docker-compose -f <(curl 'https://raw.githubusercontent.com/remstef/webanno-exmaralda/master/docker-compose.yml') -p sr down
#
# roughly resembles:
#    $ docker run --name sr_webanno-mysql_1 -v $WEBANNO_HOME/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=toor -e MYSQL_USER=webanno -e MYSQL_PASSWORD=webanno -e MYSQL_DATABASE=webanno -p 3306:3306 -d mysql:5 --character-set-server=utf8 --collation-server=utf8_bin
#    $ docker run -d --name sr_webanno-server_1 -p 18080:18080 --link sr_webanno-mysql_1:mysql remstef/webanno-exmaralda
#
version: '2.1'

networks:
  webanno-net:

services:
  webanno-mysql:
    image: "mysql:5"
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=webanno
      - MYSQL_USER=webanno
      - MYSQL_PORT=3306
      - MYSQL_PASSWORD=webanno
    volumes:
      - ${WEBANNO_HOME}/mysql-data:/var/lib/mysql
    command: ["--character-set-server=utf8", "--collation-server=utf8_bin"]
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-pwebanno", "-uwebanno"]
      interval: 20s
      timeout: 10s
      retries: 10
    networks:
      webanno-net:
        aliases:
          - mysql

  webanno-server:
    image: "remstef/webanno-exmaralda:latest"
    ports:
      - "${WEBANNO_PORT}:18080"
    depends_on:
      webanno-mysql:
        condition: service_healthy
    mem_limit: 4g
    memswap_limit: 5g
    restart: unless-stopped
    networks:
      webanno-net:
